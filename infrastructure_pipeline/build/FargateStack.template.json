{
  "Resources": {
    "testingapivpcC13E492C": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/Resource"
      }
    },
    "testingapivpcPublicSubnet1Subnet580BF108": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet1/Subnet"
      }
    },
    "testingapivpcPublicSubnet1RouteTableC58507BD": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet1/RouteTable"
      }
    },
    "testingapivpcPublicSubnet1RouteTableAssociationA15F82A7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPublicSubnet1RouteTableC58507BD"
        },
        "SubnetId": {
          "Ref": "testingapivpcPublicSubnet1Subnet580BF108"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "testingapivpcPublicSubnet1DefaultRouteA974254F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPublicSubnet1RouteTableC58507BD"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "testingapivpcIGW1CD92CBB"
        }
      },
      "DependsOn": [
        "testingapivpcVPCGW558F1C53"
      ],
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "testingapivpcPublicSubnet1EIP6BAF8F64": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet1/EIP"
      }
    },
    "testingapivpcPublicSubnet1NATGateway01DE57CC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "testingapivpcPublicSubnet1EIP6BAF8F64",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "testingapivpcPublicSubnet1Subnet580BF108"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet1/NATGateway"
      }
    },
    "testingapivpcPublicSubnet2Subnet897F5CBB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet2/Subnet"
      }
    },
    "testingapivpcPublicSubnet2RouteTableE7002732": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet2/RouteTable"
      }
    },
    "testingapivpcPublicSubnet2RouteTableAssociationF245138A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPublicSubnet2RouteTableE7002732"
        },
        "SubnetId": {
          "Ref": "testingapivpcPublicSubnet2Subnet897F5CBB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "testingapivpcPublicSubnet2DefaultRouteC139697F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPublicSubnet2RouteTableE7002732"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "testingapivpcIGW1CD92CBB"
        }
      },
      "DependsOn": [
        "testingapivpcVPCGW558F1C53"
      ],
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "testingapivpcPublicSubnet2EIP3C407150": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet2/EIP"
      }
    },
    "testingapivpcPublicSubnet2NATGateway3E244595": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "testingapivpcPublicSubnet2EIP3C407150",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "testingapivpcPublicSubnet2Subnet897F5CBB"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PublicSubnet2/NATGateway"
      }
    },
    "testingapivpcPrivateSubnet1SubnetA858DF05": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet1/Subnet"
      }
    },
    "testingapivpcPrivateSubnet1RouteTableC32BAFD0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet1/RouteTable"
      }
    },
    "testingapivpcPrivateSubnet1RouteTableAssociationC86CE75A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPrivateSubnet1RouteTableC32BAFD0"
        },
        "SubnetId": {
          "Ref": "testingapivpcPrivateSubnet1SubnetA858DF05"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "testingapivpcPrivateSubnet1DefaultRoute84B74A6B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPrivateSubnet1RouteTableC32BAFD0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "testingapivpcPublicSubnet1NATGateway01DE57CC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "testingapivpcPrivateSubnet2SubnetAD19798C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet2/Subnet"
      }
    },
    "testingapivpcPrivateSubnet2RouteTable66AA6086": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet2/RouteTable"
      }
    },
    "testingapivpcPrivateSubnet2RouteTableAssociationF69E307F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPrivateSubnet2RouteTable66AA6086"
        },
        "SubnetId": {
          "Ref": "testingapivpcPrivateSubnet2SubnetAD19798C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "testingapivpcPrivateSubnet2DefaultRoute19FB42E9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "testingapivpcPrivateSubnet2RouteTable66AA6086"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "testingapivpcPublicSubnet2NATGateway3E244595"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "testingapivpcIGW1CD92CBB": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "FargateStack/testing-api-vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/IGW"
      }
    },
    "testingapivpcVPCGW558F1C53": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        },
        "InternetGatewayId": {
          "Ref": "testingapivpcIGW1CD92CBB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-vpc/VPCGW"
      }
    },
    "testingapicluster2205CDDC": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "testing-api-cluster"
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-cluster/Resource"
      }
    },
    "testingapiexecutionrole715DF8D3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "testing-api-execution-role"
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-execution-role/Resource"
      }
    },
    "testingapiexecutionroleDefaultPolicy94254AB7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":repository/testing-api-repository"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testingapiexecutionroleDefaultPolicy94254AB7",
        "Roles": [
          {
            "Ref": "testingapiexecutionrole715DF8D3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-execution-role/DefaultPolicy/Resource"
      }
    },
    "testingapitaskdefinitionTaskRole06CD3A68": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-task-definition/TaskRole/Resource"
      }
    },
    "testingapitaskdefinitionF0D8C736": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      4,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":ecr:",
                                {
                                  "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                ":repository/testing-api-repository"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  ".dkr.ecr.",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          ":",
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":ecr:",
                                {
                                  "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                ":repository/testing-api-repository"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/testing-api-repository:latest"
                ]
              ]
            },
            "Name": "DefaultContainer",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "testingapiexecutionrole715DF8D3",
            "Arn"
          ]
        },
        "Family": "testing-api-task-definition",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "testingapitaskdefinitionTaskRole06CD3A68",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-task-definition/Resource"
      }
    },
    "testingapiServiceNewLB767D3A69": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "testingapiServiceNewLBSecurityGroupB68C0854",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "testingapivpcPublicSubnet1Subnet580BF108"
          },
          {
            "Ref": "testingapivpcPublicSubnet2Subnet897F5CBB"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "testingapivpcPublicSubnet1DefaultRouteA974254F",
        "testingapivpcPublicSubnet2DefaultRouteC139697F"
      ],
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/LB/Resource"
      }
    },
    "testingapiServiceNewLBSecurityGroupB68C0854": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB FargateStacktestingapiServiceNewLBBE6C55DA",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/LB/SecurityGroup/Resource"
      }
    },
    "testingapiServiceNewLBSecurityGrouptoFargateStacktestingapiServiceNewServiceSecurityGroup342F016280809AAA7D91": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "testingapiServiceNewLBSecurityGroupB68C0854",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "testingapiServiceNewServiceSecurityGroup0AB68C93",
            "GroupId"
          ]
        },
        "FromPort": 8080,
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/LB/SecurityGroup/to FargateStacktestingapiServiceNewServiceSecurityGroup342F0162:8080"
      }
    },
    "testingapiServiceNewLBPublicListener186BC064": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "testingapiServiceNewLBPublicListenerECSGroupEF64CDC7"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "testingapiServiceNewLB767D3A69"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/LB/PublicListener/Resource"
      }
    },
    "testingapiServiceNewLBPublicListenerECSGroupEF64CDC7": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "testingapiServiceNewServiceAFBA8C36": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "testingapicluster2205CDDC"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "DefaultContainer",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "testingapiServiceNewLBPublicListenerECSGroupEF64CDC7"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "testingapiServiceNewServiceSecurityGroup0AB68C93",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "testingapivpcPrivateSubnet1SubnetA858DF05"
              },
              {
                "Ref": "testingapivpcPrivateSubnet2SubnetAD19798C"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "testingapitaskdefinitionF0D8C736"
        }
      },
      "DependsOn": [
        "testingapiServiceNewLBPublicListenerECSGroupEF64CDC7",
        "testingapiServiceNewLBPublicListener186BC064"
      ],
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/Service/Service"
      }
    },
    "testingapiServiceNewServiceSecurityGroup0AB68C93": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "testingapivpcC13E492C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup/Resource"
      }
    },
    "testingapiServiceNewServiceSecurityGroupfromFargateStacktestingapiServiceNewLBSecurityGroupD07E05AE8080477F9DE0": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "testingapiServiceNewServiceSecurityGroup0AB68C93",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "testingapiServiceNewLBSecurityGroupB68C0854",
            "GroupId"
          ]
        },
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup/from FargateStacktestingapiServiceNewLBSecurityGroupD07E05AE:8080"
      }
    }
  },
  "Outputs": {
    "testingapiServiceNewLoadBalancerDNS5B578A3E": {
      "Value": {
        "Fn::GetAtt": [
          "testingapiServiceNewLB767D3A69",
          "DNSName"
        ]
      }
    },
    "testingapiServiceNewServiceURL6152D31E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "testingapiServiceNewLB767D3A69",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  }
}