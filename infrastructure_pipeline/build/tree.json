{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "CodePipelineStack": {
        "id": "CodePipelineStack",
        "path": "CodePipelineStack",
        "children": {
          "Pipeline": {
            "id": "Pipeline",
            "path": "CodePipelineStack/Pipeline",
            "children": {
              "ArtifactsBucketEncryptionKey": {
                "id": "ArtifactsBucketEncryptionKey",
                "path": "CodePipelineStack/Pipeline/ArtifactsBucketEncryptionKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CodePipelineStack/Pipeline/ArtifactsBucketEncryptionKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": [
                                "kms:Create*",
                                "kms:Describe*",
                                "kms:Enable*",
                                "kms:List*",
                                "kms:Put*",
                                "kms:Update*",
                                "kms:Revoke*",
                                "kms:Disable*",
                                "kms:Get*",
                                "kms:Delete*",
                                "kms:ScheduleKeyDeletion",
                                "kms:CancelKeyDeletion",
                                "kms:GenerateDataKey",
                                "kms:TagResource",
                                "kms:UntagResource"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineRoleD68726F7",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "BuildProjectRoleAA92C755",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "BuildProjectRoleAA92C755",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucket": {
                "id": "ArtifactsBucket",
                "path": "CodePipelineStack/Pipeline/ArtifactsBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CodePipelineStack/Pipeline/ArtifactsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "aws:kms",
                                "kmsMasterKeyId": {
                                  "Fn::GetAtt": [
                                    "PipelineArtifactsBucketEncryptionKey01D58D69",
                                    "Arn"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "CodePipelineStack/Pipeline/ArtifactsBucket/Notifications"
                  }
                }
              },
              "ArtifactsBucketEncryptionKeyAlias": {
                "id": "ArtifactsBucketEncryptionKeyAlias",
                "path": "CodePipelineStack/Pipeline/ArtifactsBucketEncryptionKeyAlias",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CodePipelineStack/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                      "aws:cdk:cloudformation:props": {
                        "aliasName": "alias/codepipeline-codepipelinestackpipelined06e2e48",
                        "targetKeyId": {
                          "Fn::GetAtt": [
                            "PipelineArtifactsBucketEncryptionKey01D58D69",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Role": {
                "id": "Role",
                "path": "CodePipelineStack/Pipeline/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CodePipelineStack/Pipeline/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codepipeline.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CodePipelineStack/Pipeline/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CodePipelineStack/Pipeline/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PipelineRoleDefaultPolicyC7A05455",
                            "roles": [
                              {
                                "Ref": "PipelineRoleD68726F7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CodePipelineStack/Pipeline/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "PipelineRoleD68726F7",
                        "Arn"
                      ]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "GitHubSource",
                            "outputArtifacts": [
                              {
                                "name": "SourceArtifact"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "ThirdParty",
                              "provider": "GitHub"
                            },
                            "configuration": {
                              "Owner": "Boscoand",
                              "Repo": "fargate-workshop",
                              "Branch": "master",
                              "OAuthToken": "92ef4b35b5f053889d2f480b85d3cee80531b2b6",
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1
                          }
                        ]
                      },
                      {
                        "name": "Build",
                        "actions": [
                          {
                            "name": "CodeBuild",
                            "inputArtifacts": [
                              {
                                "name": "SourceArtifact"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "BuildArtifact"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "BuildProject097C5DB7"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "PipelineArtifactsBucket22248F97"
                      },
                      "encryptionKey": {
                        "type": "KMS",
                        "id": {
                          "Fn::GetAtt": [
                            "PipelineArtifactsBucketEncryptionKey01D58D69",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "name": "testing-api-pipeline"
                  }
                }
              },
              "Source": {
                "id": "Source",
                "path": "CodePipelineStack/Pipeline/Source",
                "children": {
                  "GitHubSource": {
                    "id": "GitHubSource",
                    "path": "CodePipelineStack/Pipeline/Source/GitHubSource",
                    "children": {
                      "WebhookResource": {
                        "id": "WebhookResource",
                        "path": "CodePipelineStack/Pipeline/Source/GitHubSource/WebhookResource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::CodePipeline::Webhook",
                          "aws:cdk:cloudformation:props": {
                            "authentication": "GITHUB_HMAC",
                            "authenticationConfiguration": {
                              "secretToken": "92ef4b35b5f053889d2f480b85d3cee80531b2b6"
                            },
                            "filters": [
                              {
                                "jsonPath": "$.ref",
                                "matchEquals": "refs/heads/{Branch}"
                              }
                            ],
                            "targetAction": "GitHubSource",
                            "targetPipeline": {
                              "Ref": "PipelineC660917D"
                            },
                            "targetPipelineVersion": 1,
                            "registerWithThirdParty": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Build": {
                "id": "Build",
                "path": "CodePipelineStack/Pipeline/Build",
                "children": {
                  "CodeBuild": {
                    "id": "CodeBuild",
                    "path": "CodePipelineStack/Pipeline/Build/CodeBuild",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "CodePipelineStack/Pipeline/Build/CodeBuild/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "CodePipelineStack/Pipeline/Build/CodeBuild/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "CodePipelineStack/Pipeline/Build/CodeBuild/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "CodePipelineStack/Pipeline/Build/CodeBuild/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "BuildProject097C5DB7",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineBuildCodeBuildCodePipelineActionRoleDefaultPolicyD9C4A2F6",
                                    "roles": [
                                      {
                                        "Ref": "PipelineBuildCodeBuildCodePipelineActionRoleEE1A2CE7"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "BuildProject": {
            "id": "BuildProject",
            "path": "CodePipelineStack/BuildProject",
            "children": {
              "Role": {
                "id": "Role",
                "path": "CodePipelineStack/BuildProject/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CodePipelineStack/BuildProject/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CodePipelineStack/BuildProject/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CodePipelineStack/BuildProject/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":log-group:/aws/codebuild/",
                                          {
                                            "Ref": "BuildProject097C5DB7"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":log-group:/aws/codebuild/",
                                          {
                                            "Ref": "BuildProject097C5DB7"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":report-group/",
                                        {
                                          "Ref": "BuildProject097C5DB7"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ec2:DescribeAvailabilityZones",
                                    "route53:ListHostedZonesByName"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "ssm:GetParameter",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":ssm:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":parameter/CertificateArn-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ecr:GetAuthorizationToken",
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:GetRepositoryPolicy",
                                    "ecr:DescribeRepositories",
                                    "ecr:ListImages",
                                    "ecr:DescribeImages",
                                    "ecr:BatchGetImage",
                                    "ecr:InitiateLayerUpload",
                                    "ecr:UploadLayerPart",
                                    "ecr:CompleteLayerUpload",
                                    "ecr:PutImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "BuildProjectRoleDefaultPolicy3E9F248C",
                            "roles": [
                              {
                                "Ref": "BuildProjectRoleAA92C755"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CodePipelineStack/BuildProject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/standard:1.0",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL"
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "BuildProjectRoleAA92C755",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "buildspec.yml"
                    },
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "PipelineArtifactsBucketEncryptionKey01D58D69",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FargateStack": {
        "id": "FargateStack",
        "path": "FargateStack",
        "children": {
          "testing-api-vpc": {
            "id": "testing-api-vpc",
            "path": "FargateStack/testing-api-vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "FargateStack/testing-api-vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "FargateStack/testing-api-vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "FargateStack/testing-api-vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPublicSubnet1RouteTableC58507BD"
                        },
                        "subnetId": {
                          "Ref": "testingapivpcPublicSubnet1Subnet580BF108"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPublicSubnet1RouteTableC58507BD"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "testingapivpcIGW1CD92CBB"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "testingapivpcPublicSubnet1EIP6BAF8F64",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "testingapivpcPublicSubnet1Subnet580BF108"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "FargateStack/testing-api-vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPublicSubnet2RouteTableE7002732"
                        },
                        "subnetId": {
                          "Ref": "testingapivpcPublicSubnet2Subnet897F5CBB"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPublicSubnet2RouteTableE7002732"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "testingapivpcIGW1CD92CBB"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "FargateStack/testing-api-vpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "testingapivpcPublicSubnet2EIP3C407150",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "testingapivpcPublicSubnet2Subnet897F5CBB"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "FargateStack/testing-api-vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPrivateSubnet1RouteTableC32BAFD0"
                        },
                        "subnetId": {
                          "Ref": "testingapivpcPrivateSubnet1SubnetA858DF05"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPrivateSubnet1RouteTableC32BAFD0"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "testingapivpcPublicSubnet1NATGateway01DE57CC"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "FargateStack/testing-api-vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "testingapivpcC13E492C"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "FargateStack/testing-api-vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPrivateSubnet2RouteTable66AA6086"
                        },
                        "subnetId": {
                          "Ref": "testingapivpcPrivateSubnet2SubnetAD19798C"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "FargateStack/testing-api-vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "testingapivpcPrivateSubnet2RouteTable66AA6086"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "testingapivpcPublicSubnet2NATGateway3E244595"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "FargateStack/testing-api-vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "FargateStack/testing-api-vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "FargateStack/testing-api-vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "testingapivpcC13E492C"
                    },
                    "internetGatewayId": {
                      "Ref": "testingapivpcIGW1CD92CBB"
                    }
                  }
                }
              }
            }
          },
          "testing-api-cluster": {
            "id": "testing-api-cluster",
            "path": "FargateStack/testing-api-cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "FargateStack/testing-api-cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "testing-api-cluster"
                  }
                }
              }
            }
          },
          "Repo": {
            "id": "Repo",
            "path": "FargateStack/Repo"
          },
          "testing-api-execution-role": {
            "id": "testing-api-execution-role",
            "path": "FargateStack/testing-api-execution-role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "FargateStack/testing-api-execution-role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "roleName": "testing-api-execution-role"
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "FargateStack/testing-api-execution-role/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "FargateStack/testing-api-execution-role/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:GetAuthorizationToken",
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/testing-api-repository"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "ecr:GetAuthorizationToken",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "testingapiexecutionroleDefaultPolicy94254AB7",
                        "roles": [
                          {
                            "Ref": "testingapiexecutionrole715DF8D3"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "testing-api-task-definition": {
            "id": "testing-api-task-definition",
            "path": "FargateStack/testing-api-task-definition",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "FargateStack/testing-api-task-definition/TaskRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "FargateStack/testing-api-task-definition/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "FargateStack/testing-api-task-definition/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  4,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":repository/testing-api-repository"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".dkr.ecr.",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      ":",
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ecr:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":repository/testing-api-repository"
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              ".",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/testing-api-repository:latest"
                            ]
                          ]
                        },
                        "name": "DefaultContainer",
                        "portMappings": [
                          {
                            "containerPort": 8080,
                            "protocol": "tcp"
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "testingapiexecutionrole715DF8D3",
                        "Arn"
                      ]
                    },
                    "family": "testing-api-task-definition",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "testingapitaskdefinitionTaskRole06CD3A68",
                        "Arn"
                      ]
                    }
                  }
                }
              },
              "DefaultContainer": {
                "id": "DefaultContainer",
                "path": "FargateStack/testing-api-task-definition/DefaultContainer"
              }
            }
          },
          "testing-api-ServiceNew": {
            "id": "testing-api-ServiceNew",
            "path": "FargateStack/testing-api-ServiceNew",
            "children": {
              "LB": {
                "id": "LB",
                "path": "FargateStack/testing-api-ServiceNew/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "FargateStack/testing-api-ServiceNew/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "scheme": "internet-facing",
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "testingapiServiceNewLBSecurityGroupB68C0854",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnets": [
                          {
                            "Ref": "testingapivpcPublicSubnet1Subnet580BF108"
                          },
                          {
                            "Ref": "testingapivpcPublicSubnet2Subnet897F5CBB"
                          }
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "FargateStack/testing-api-ServiceNew/LB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "FargateStack/testing-api-ServiceNew/LB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB FargateStacktestingapiServiceNewLBBE6C55DA",
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 80,
                                "toPort": 80,
                                "description": "Allow from anyone on port 80"
                              }
                            ],
                            "vpcId": {
                              "Ref": "testingapivpcC13E492C"
                            }
                          }
                        }
                      },
                      "to FargateStacktestingapiServiceNewServiceSecurityGroup342F0162:8080": {
                        "id": "to FargateStacktestingapiServiceNewServiceSecurityGroup342F0162:8080",
                        "path": "FargateStack/testing-api-ServiceNew/LB/SecurityGroup/to FargateStacktestingapiServiceNewServiceSecurityGroup342F0162:8080",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": {
                              "Fn::GetAtt": [
                                "testingapiServiceNewLBSecurityGroupB68C0854",
                                "GroupId"
                              ]
                            },
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": {
                              "Fn::GetAtt": [
                                "testingapiServiceNewServiceSecurityGroup0AB68C93",
                                "GroupId"
                              ]
                            },
                            "fromPort": 8080,
                            "toPort": 8080
                          }
                        }
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "FargateStack/testing-api-ServiceNew/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "FargateStack/testing-api-ServiceNew/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "type": "forward",
                                "targetGroupArn": {
                                  "Ref": "testingapiServiceNewLBPublicListenerECSGroupEF64CDC7"
                                }
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "testingapiServiceNewLB767D3A69"
                            },
                            "port": 80,
                            "protocol": "HTTP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "FargateStack/testing-api-ServiceNew/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "FargateStack/testing-api-ServiceNew/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "HTTP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Ref": "testingapivpcC13E492C"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "FargateStack/testing-api-ServiceNew/LoadBalancerDNS"
              },
              "ServiceURL": {
                "id": "ServiceURL",
                "path": "FargateStack/testing-api-ServiceNew/ServiceURL"
              },
              "Service": {
                "id": "Service",
                "path": "FargateStack/testing-api-ServiceNew/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "FargateStack/testing-api-ServiceNew/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "testingapicluster2205CDDC"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "testingapiServiceNewLBPublicListenerECSGroupEF64CDC7"
                            },
                            "containerName": "DefaultContainer",
                            "containerPort": 8080
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "DISABLED",
                            "subnets": [
                              {
                                "Ref": "testingapivpcPrivateSubnet1SubnetA858DF05"
                              },
                              {
                                "Ref": "testingapivpcPrivateSubnet2SubnetAD19798C"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "testingapiServiceNewServiceSecurityGroup0AB68C93",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "testingapitaskdefinitionF0D8C736"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": {
                              "Ref": "testingapivpcC13E492C"
                            }
                          }
                        }
                      },
                      "from FargateStacktestingapiServiceNewLBSecurityGroupD07E05AE:8080": {
                        "id": "from FargateStacktestingapiServiceNewLBSecurityGroupD07E05AE:8080",
                        "path": "FargateStack/testing-api-ServiceNew/Service/SecurityGroup/from FargateStacktestingapiServiceNewLBSecurityGroupD07E05AE:8080",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 8080,
                            "groupId": {
                              "Fn::GetAtt": [
                                "testingapiServiceNewServiceSecurityGroup0AB68C93",
                                "GroupId"
                              ]
                            },
                            "sourceSecurityGroupId": {
                              "Fn::GetAtt": [
                                "testingapiServiceNewLBSecurityGroupB68C0854",
                                "GroupId"
                              ]
                            },
                            "toPort": 8080
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}